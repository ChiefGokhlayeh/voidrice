#!/usr/bin/env bash
#
# Copyright (C) 2015 James Murphy
# Modifications by Andreas Baulig
# Licensed under the terms of the GNU GPL v2 only.
#
# i3blocks blocklet script to display pending system upgrades

# FontAwesome refresh symbol, change if you do not want to install FontAwesome
PENDING_SYMBOL=${PENDING_SYMBOL:-"ï€¡"}

# By default, show both the symbol and the numbers
SYMBOL_ONLY=${SYMBOL_ONLY:-0}

# By default, show something when no upgrades are pending
ALWAYS_PRINT=${ALWAYS_PRINT:-1}

# Colors for when there is/isn't a pending upgrade
PENDING_COLOR=${PENDING_COLOR:-"$(xrdb -query | grep color6 -m 1 | cut -f 2)"}
NONPENDING_COLOR=${NONPENDING_COLOR:-"$(xrdb -query | grep color12 -m 1 | cut -f 2)"}
TEXT_COLOR=${TEXT_COLOR:-"$(xrdb -query | grep color13 -m 1 | cut -f 2)"}

case $BLOCK_BUTTON in
		1) $TERMINAL_INVOKE sudo apt full-upgrade;
esac

while getopts s:oc:n:Nh opt; do
    case "$opt" in
        s) PENDING_SYMBOL="$OPTARG" ;;
        o) SYMBOL_ONLY=1 ;;
        c) PENDING_COLOR="$OPTARG" ;;
        n) NONPENDING_COLOR="$OPTARG" ;;
        N) ALWAYS_PRINT=0 ;;
        h) printf \
"Usage: apt-upgrades [-s pending_symbol] [-o] [-c pending_color] [-N|-n nonpending_color] [-h]
Options:
-s\tSpecify a refresh symbol. Default: \"\\\\uf021 \"
-o\tShow refresh symbol only, but no numbers.
-c\tColor when upgrade is pending. Default:  #00FF00
-n\tColor when no upgrade is pending. Default: #FFFFFF
-N\tOnly display text if upgrade is pending (supercedes -n)
-h\tShow this help text\n" && exit 0;;
    esac
done

read upgraded new removed held < <(
LC_ALL=C apt-get full-upgrade --simulate --assume-yes |\
    grep -m1 '^[0-9]* upgraded,' |\
    tr -cd '0-9 ' |\
    tr ' ' '\n' |\
    grep '[0-9]\+' |\
    xargs echo)

if [[ $upgraded != 0 ]] || [[ $new != 0 ]] || [[ $removed != 0 ]] || [[ $held != 0 ]]; then
    icon_color="$PENDING_COLOR"
    if [[ $SYMBOL_ONLY == 1 ]]; then
        printf "<span color='%s'>%s</span>" "$icon_color" "$PENDING_SYMBOL"
    else
        printf "<span color='%s'>%s</span> <span color='%s'>%s / %s / %s / %s</span>" "$icon_color" "$PENDING_SYMBOL" "$TEXT_COLOR" "$upgraded" "$new" "$removed" "$held"
    fi
elif [[ $ALWAYS_PRINT == 1 ]]; then
    icon_color="$NONPENDING_COLOR"
    printf "<span color='%s'>%s</span> <span color='%s'>%s / %s / %s / %s</span>" "$icon_color" "$PENDING_SYMBOL" "$TEXT_COLOR" "$upgraded" "$new" "$removed" "$held"
fi

